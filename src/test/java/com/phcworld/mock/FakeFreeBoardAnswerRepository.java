package com.phcworld.mock;

import com.phcworld.answer.domain.FreeBoardAnswer;
import com.phcworld.answer.infrastructure.FreeBoardAnswerRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;

public class FakeFreeBoardAnswerRepository implements FreeBoardAnswerRepository {
    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<FreeBoardAnswer> data = new ArrayList<>();
    @Override
    public FreeBoardAnswer save(FreeBoardAnswer freeBoardAnswer) {
        if(freeBoardAnswer.getId() == null || freeBoardAnswer.getId().equals(0L)){
            FreeBoardAnswer newFreeBoardAnswer = FreeBoardAnswer.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .freeBoard(freeBoardAnswer.getFreeBoard())
                    .contents(freeBoardAnswer.getContents())
                    .writer(freeBoardAnswer.getWriter())
                    .createDate(freeBoardAnswer.getCreateDate())
                    .updateDate(freeBoardAnswer.getUpdateDate())
                    .build();
            data.add(newFreeBoardAnswer);
            return newFreeBoardAnswer;
        } else {
            data.removeIf(a -> Objects.equals(a.getId(), freeBoardAnswer.getId()));
            data.add(freeBoardAnswer);
            return freeBoardAnswer;
        }
    }

}
